import type { AxiosInstance } from 'axios'
import RequestHandler from '~/utils/requestHandler'
import type { Scanner } from '~/project/types'
import type { OxoScanType } from '~/graphql/types'

const GET_KB_VULNS_SCANS_QUERY = gql`query scan($scanId:Int!){
    scan(scanId:$scanId){
        id
        title
        progress
        asset
        createdTime
        kbVulnerabilities{
            highestRiskRating
            highestCvssV3Vector
            highestCvssV3BaseScore
            kb{
                title
                shortDescription
                description
                recommendation
                references{
                    title
                    url
                }
            }
            vulnerabilities{
                vulnerabilities{
                    id
                    technicalDetail
                    riskRating
                    cvssV3Vector
                    detail{
                        title
                        shortDescription
                        description
                        recommendation
                        references{
                            title
                            url
                        }
                    }
                }
            }
        }
    }
}`
export default class VulnerabilityService {
  private readonly requestHandler: RequestHandler
  hasNext: boolean

  constructor(axios: AxiosInstance) {
    this.requestHandler = new RequestHandler(axios)
    this.hasNext = true
  }

  /**
     * Get KB vulnerabilities for a scan
     * @param scanner
     * @param id
     */
  async getKBVulnerabilities(scanner: Scanner, id: number): Promise<OxoScanType> {
    const res = await this.requestHandler.post(
      scanner,
      {
        query: GET_KB_VULNS_SCANS_QUERY,
        variables: { scanId: id }
      })
    return res.data.data.scan
  }
}
