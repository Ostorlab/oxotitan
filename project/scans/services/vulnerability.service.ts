import type { AxiosInstance } from 'axios'
import type { OxoScanType } from '~/graphql/types'
import requestHandler from '~/utils/requestHandler'
import type { Scanner } from '~/project/types'

const GET_KB_VULNS_SCANS_QUERY = gql`query scan($scanId:Int!){
  scan(scanId:$scanId){
    id
    title
    progress
    asset
    createdTime
    kbVulnerabilities{
      highestRiskRating
      highestCvssV3Vector
      highestCvssV3BaseScore
      kb{
        title
        shortDescription
        description
        recommendation
        references
      }
      vulnerabilities{
        vulnerabilities{
          id
          technicalDetail
          riskRating
          cvssV3Vector
          detail{
            title
            shortDescription
            description
            recommendation
            references
          }

        }
      }
    }
  }
}`

/**
 * Class to handle the vulnerability service
 */
export default class VulnerabilityService {
  private readonly requestAggregator: requestHandler
  constructor(axios: AxiosInstance) {
    this.requestAggregator = new requestHandler(axios)
  }

  /**
   * Get KB vulnerabilities for a scan
   * @param scanner
   * @param id
   */
  async getKBVulnerabilities(scanner: Scanner, id: number): Promise<OxoScanType> {
    const res = await this.requestAggregator.post(
      scanner,
      {
        query: GET_KB_VULNS_SCANS_QUERY,
        variables: { scanId: id }
      })
    return res.data.data.scan
  }
}
