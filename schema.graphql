# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutations
}

union OxoAssetType = OxoAndroidFileAssetType | OxoAndroidStoreAssetType | OxoDomainNameAssetsType | OxoIOSFileAssetType | OxoIOSStoreAssetType | OxoNetworkAssetType | OxoUrlsAssetType

"Create asset mutation."
type CreateAssetsMutation {
    assets: [OxoAssetType]
}

"Delete agent group mutation."
type DeleteAgentGroupMutation {
    result: Boolean
}

"Delete Scan & its information mutation."
type DeleteScanMutation {
    result: Boolean
}

"Import scan mutation."
type ImportScanMutation {
    message: String
}

type Mutations {
    "Create an asset."
    createAssets(assets: [OxoAssetInputType]!): CreateAssetsMutation
    "Delete agent group."
    deleteAgentGroup(agentGroupId: Int!): DeleteAgentGroupMutation
    "Delete a scan & all its information."
    deleteScan(scanIds: [Int]!): DeleteScanMutation
    "Import scan from file."
    importScan(file: Upload!, scanId: Int): ImportScanMutation
    "Create agent group"
    publishAgentGroup(agentGroup: OxoAgentGroupCreateInputType!): PublishAgentGroupMutation
    "Run scan"
    runScan(scan: OxoAgentScanInputType!): RunScanMutation
    "Stops running scan, scan is marked as stopped once the engine has completed cancellation."
    stopScan(scanIds: [Int]!): StopScanMutation
}

"Graphene object type for a list of agent arguments."
type OxoAgentArgumentType {
    description: String
    name: String
    type: String
    value: Bytes
}

"Graphene object type for a list of agent arguments."
type OxoAgentArgumentsType {
    args: [OxoAgentArgumentType]!
}

"SQLAlchemy object type for an agent group."
type OxoAgentGroupType {
    agents(numberElements: Int, page: Int): OxoAgentsType!
    assetTypes: [String]
    createdTime: DateTime
    description: String
    id: ID!
    key: String
    name: String
    yamlSource: String
}

type OxoAgentGroupsType {
    agentGroups: [OxoAgentGroupType]!
    pageInfo: PageInfo
}

"SQLAlchemy object type for an agent."
type OxoAgentType {
    args: OxoAgentArgumentsType!
    key: String
}

"Graphene object type for a list of agents."
type OxoAgentsType {
    agents: [OxoAgentType]!
    pageInfo: PageInfo
}

"Graphene object type for an aggregated knowledge base vulnerability."
type OxoAggregatedKnowledgeBaseVulnerabilityType {
    highestCvssV3BaseScore: Float
    highestCvssV3Vector: String
    highestRiskRating: OxoRiskRating
    kb: OxoKnowledgeBaseVulnerabilityType
    "List of vulnerabilities."
    vulnerabilities(detailTitles: [String], numberElements: Int, page: Int): OxoVulnerabilitiesType
}

type OxoAndroidFileAssetType {
    id: ID!
    packageName: String
    path: String
}

type OxoAndroidStoreAssetType {
    applicationName: String
    id: ID!
    packageName: String
}

type OxoDomainNameAssetType {
    name: String
}

type OxoDomainNameAssetsType {
    domainNames: [OxoDomainNameAssetType]
    id: ID!
}

type OxoIOSFileAssetType {
    bundleId: String
    id: ID!
    path: String
}

type OxoIOSStoreAssetType {
    applicationName: String
    bundleId: String
    id: ID!
}

type OxoIPRangeAssetType {
    host: String
    mask: String
}

"SQLAlchemy object type for a knowledge base vulnerability."
type OxoKnowledgeBaseVulnerabilityType {
    description: String
    recommendation: String
    references: [OxoReferenceType]
    shortDescription: String
    title: String
}

type OxoLinkAssetType {
    method: String
    url: String
}

type OxoNetworkAssetType {
    id: ID!
    networks: [OxoIPRangeAssetType]
}

"Graphene object type for a reference."
type OxoReferenceType {
    title: String
    url: String
}

"Scan object."
type OxoScanType {
    agentGroup: OxoAgentGroupType
    assets: [OxoAssetType]
    createdTime: DateTime
    id: ID!
    "List of aggregated knowledge base vulnerabilities."
    kbVulnerabilities(detailTitle: String): [OxoAggregatedKnowledgeBaseVulnerabilityType]
    messageStatus: String
    progress: String
    title: String
    "List of vulnerabilities."
    vulnerabilities(detailTitles: [String], numberElements: Int, page: Int, vulnIds: [Int]): OxoVulnerabilitiesType
}

"Graphene object type for a list of scans."
type OxoScansType {
    pageInfo: PageInfo
    scans: [OxoScanType]!
}

type OxoUrlsAssetType {
    id: ID!
    links: [OxoLinkAssetType]
}

"Graphene object type for a list of vulnerabilities."
type OxoVulnerabilitiesType {
    pageInfo: PageInfo
    vulnerabilities: [OxoVulnerabilityType]!
}

"SQLAlchemy object type for a vulnerability."
type OxoVulnerabilityType {
    cvssV3BaseScore: Float
    cvssV3Vector: String
    detail: OxoKnowledgeBaseVulnerabilityType
    dna: String
    id: ID!
    riskRating: OxoRiskRating
    technicalDetail: String
}

"Page info object type."
type PageInfo {
    count: Int
    hasNext: Boolean
    hasPrevious: Boolean
    numPages: Int
}

"Create agent group."
type PublishAgentGroupMutation {
    agentGroup: OxoAgentGroupType
}

type Query {
    agentGroups(agentGroupIds: [Int], assetType: AssetTypeEnum, numberElements: Int, orderBy: AgentGroupOrderByEnum, page: Int, search: String, sort: SortEnum): OxoAgentGroupsType
    "Retrieve scan by id."
    scan(scanId: Int): OxoScanType
    "List of scans."
    scans(numberElements: Int, orderBy: OxoScanOrderByEnum, page: Int, scanIds: [Int], sort: SortEnum): OxoScansType
}

type RunScanMutation {
    scan: OxoScanType
}

"Stop scan mutation."
type StopScanMutation {
    scans: [OxoScanType]
}

enum AgentGroupOrderByEnum {
    AgentGroupId
    CreatedTime
    Name
}

"Enum for the asset types."
enum AssetTypeEnum {
    ANDROID_FILE
    ANDROID_STORE
    DOMAIN
    FILE
    IOS_FILE
    IOS_STORE
    IP
    LINK
}

enum OxoRiskRating {
    CRITICAL
    HARDENING
    HIGH
    IMPORTANT
    INFO
    LOW
    MEDIUM
    POTENTIALLY
    SECURE
}

"Enum for the elements to order a scan by."
enum OxoScanOrderByEnum {
    CreatedTime
    Progress
    ScanId
    Title
}

"Sort enum, for the sorting order of the results."
enum SortEnum {
    Asc
    Desc
}

"The `Bytes` scalar type represents binary data in a bytes format."
scalar Bytes

"""

The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

"""

Create scalar that ignores normal serialization/deserialization, since
that will be handled by the multipart request spec
"""
scalar Upload

"Input object type for an agent argument."
input OxoAgentArgumentInputType {
    description: String
    name: String!
    type: String!
    value: Bytes
}

"Input object type for creating an agent group agent."
input OxoAgentGroupAgentCreateInputType {
    args: [OxoAgentArgumentInputType] = []
    key: String!
}

"Input object type for creating an agent group."
input OxoAgentGroupCreateInputType {
    agents: [OxoAgentGroupAgentCreateInputType]!
    assetTypes: [AssetTypeEnum] = []
    description: String!
    name: String
}

"Input object type for scan"
input OxoAgentScanInputType {
    agentGroupId: Int!
    assetIds: [Int]!
    title: String
}

input OxoAndroidFileAssetInputType {
    file: Upload
    packageName: String
}

input OxoAndroidStoreAssetInputType {
    applicationName: String
    packageName: String
}

input OxoAssetInputType {
    androidAabFile: [OxoAndroidFileAssetInputType]
    androidApkFile: [OxoAndroidFileAssetInputType]
    androidStore: [OxoAndroidStoreAssetInputType]
    domain: [OxoDomainNameInputType]
    iosFile: [OxoIOSFileAssetInputType]
    iosStore: [OxoIOSStoreAssetInputType]
    ip: [OxoIPRangeInputType]
    link: [OxoLinkInputType]
}

input OxoDomainNameInputType {
    name: String!
}

input OxoIOSFileAssetInputType {
    bundleId: String
    file: Upload
}

input OxoIOSStoreAssetInputType {
    applicationName: String
    bundleId: String
}

input OxoIPRangeInputType {
    host: String!
    mask: String
}

input OxoLinkInputType {
    method: String = "GET"
    url: String!
}
